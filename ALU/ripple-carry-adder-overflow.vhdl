-- generated by Digital. Don't modify this file!
-- Any changes will be lost if this file is regenerated.

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

entity DIG_Add is
  generic ( Bits: integer ); 
  port (
    s: out std_logic_vector((Bits-1) downto 0);
    c_o: out std_logic;
    a: in std_logic_vector((Bits-1) downto 0);
    b: in std_logic_vector((Bits-1) downto 0);
    c_i: in std_logic );
end DIG_Add;

architecture Behavioral of DIG_Add is
   signal temp : std_logic_vector(Bits downto 0);
begin
   temp <= ('0' & a) + b + c_i;

   s    <= temp((Bits-1) downto 0);
   c_o  <= temp(Bits);
end Behavioral;


LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

entity main is
  port (
    A: in std_logic_vector(15 downto 0);
    B: in std_logic_vector(15 downto 0);
    C_in: in std_logic;
    Q: out std_logic_vector(15 downto 0);
    C_out: out std_logic;
    V: out std_logic);
end main;

architecture Behavioral of main is
  signal s0: std_logic_vector(14 downto 0);
  signal s1: std_logic_vector(14 downto 0);
  signal s2: std_logic_vector(14 downto 0);
  signal s3: std_logic;
  signal s4: std_logic;
  signal s5: std_logic;
  signal s6: std_logic;
  signal C_out_temp: std_logic;
begin
  s0 <= A(14 downto 0);
  s4 <= A(15);
  s1 <= B(14 downto 0);
  s5 <= B(15);
  gate0: entity work.DIG_Add
    generic map (
      Bits => 15)
    port map (
      a => s0,
      b => s1,
      c_i => C_in,
      s => s2,
      c_o => s3);
  gate1: entity work.DIG_Add
    generic map (
      Bits => 1)
    port map (
      a => s4,
      b => s5,
      c_i => s3,
      s => s6,
      c_o => C_out_temp);
  Q(14 downto 0) <= s2;
  Q(15) <= s6;
  V <= (C_out_temp XOR s3);
  C_out <= C_out_temp;
end Behavioral;
