/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module DIG_Sub #(
    parameter Bits = 2
)
(
    input [(Bits-1):0] a,
    input [(Bits-1):0] b,
    input c_i,
    output [(Bits-1):0] s,
    output c_o
);
    wire [Bits:0] temp;

    assign temp = a - b - c_i;
    assign s = temp[(Bits-1):0];
    assign c_o = temp[Bits];
endmodule


module CompUnsigned #(
    parameter Bits = 1
)
(
    input [(Bits -1):0] a,
    input [(Bits -1):0] b,
    output \> ,
    output \= ,
    output \<
);
    assign \> = a > b;
    assign \= = a == b;
    assign \< = a < b;
endmodule


module exponent_difference (
  input [7:0] B,
  input [7:0] A,
  output [7:0] Q,
  output D // 1: A is greater
           // 2: B is greater

);
  wire [7:0] Q_temp;
  wire s0;
  wire s1;
  DIG_Sub #(
    .Bits(8)
  )
  DIG_Sub_i0 (
    .a( A ),
    .b( B ),
    .c_i( 1'b0 ),
    .s( Q_temp )
  );
  CompUnsigned #(
    .Bits(8)
  )
  CompUnsigned_i1 (
    .a( Q_temp ),
    .b( 8'b0 ),
    .\> ( s0 ),
    .\= ( s1 )
  );
  assign D = (s0 | s1);
  assign Q = Q_temp;
endmodule
